// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
    Principal 
    Admin 
    Teacher
    SMC
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  role     Role
  loginId  String @unique
  password String
  udiseId  String
}

model Message{
    id String @id @default(auto()) @map("_id") @db.ObjectId
    loginId String @unique
    role Role
    displayName String 
    text String
    timestamp DateTime
}


model School {
  id                       String  @id @default(auto()) @map("_id") @db.ObjectId
  UDISE_CODE               String  @unique
  School_Name              String
  State                    String
  School_Category          String
  School_Management        String
  School_Type              String
  Grade_Configuration      String
  Year_of_Establishment    String
  Boundary_Wall            Boolean
  Total_Class_Rooms        String
  Library_Available        Boolean
  Separate_Room_for_HM     Boolean
  Drinking_Water_Available Boolean
  Playground_Available     Boolean
  Electricity_Availability Boolean
  Total_Teachers           String
  Total_Washrooms          String
  CWSN                     Boolean
  Total_Students           String
  Result                   String
}

model SchoolClone{
    id               String @id @default(auto()) @map("_id") @db.ObjectId
  UDISE_CODE       String @unique
  School_Name      String
  State            String
  School_Category  String
  School_Management String
  School_Type      String
  Grade_Configuration String
  Year_of_Establishment String
  Boundary_Wall    Boolean
  Total_Class_Rooms String
  Library_Available Boolean
  Separate_Room_for_HM Boolean
  Drinking_Water_Available Boolean
  Playground_Available Boolean
  Electricity_Availability Boolean
  Total_Teachers   String
  Total_Washrooms  String
  CWSN             Boolean
  Total_Students   String
  Result String
}


model schoolUpdates {
  id                       String  @id @default(auto()) @map("_id") @db.ObjectId
  UDISE_CODE               String  @unique
  State                    String
  School_Name              String
  Grade_Configuration      String
  Boundary_Wall            Boolean
  Total_Class_Rooms        String
  Library_Available        Boolean
  Separate_Room_for_HM     Boolean
  Drinking_Water_Available Boolean
  Playground_Available     Boolean
  Electricity_Availability Boolean
  Total_Teachers           String
  Total_Washrooms          String
  Total_Students           String
  Result                   String
  Verified                 Boolean @default(false)
}

model Resource {
  id                             String   @id @default(auto()) @map("_id") @db.ObjectId
  UDISE_CODE                     String
  //school  School @relation(fields: [UDISE_CODE], references: [UDISE_CODE])
  resource_type                  String
  quantity                       Int
  description                    String
  status                         String   @default("pending")
  date                           DateTime @default(now())
  max_date_for_resource_delivery DateTime @default(now())
  rerequest_count                Int      @default(0)
  adminId                        String
}

model Updates{
     id String   @id @default(auto()) @map("_id") @db.ObjectId
     UDISE_CODE String
     resource_type String
     status String
     previous_value String
     new_value String
     url String
     description String
}